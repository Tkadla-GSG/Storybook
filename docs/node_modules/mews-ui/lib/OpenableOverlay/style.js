var _templateObject = _taggedTemplateLiteral(['\n    background-color: ', ';\n    box-shadow: ', ';\n    left: ', 'px;\n    max-height: 0;\n    opacity: 0;\n    overflow-x: hidden;\n    overflow-y: auto;\n    outline: none;\n    position: absolute;\n    top: ', 'px;\n    transform: scale(0);\n    transform-origin: ', ';\n    transition:\n        visibility 0s linear ', ',\n        opacity ', ' ', ',\n        transform ', ' ', ';\n    visibility: hidden;\n    z-index: ', ';\n\n    max-height: ', 'px;\n\n    ', '\n\n'], ['\n    background-color: ', ';\n    box-shadow: ', ';\n    left: ', 'px;\n    max-height: 0;\n    opacity: 0;\n    overflow-x: hidden;\n    overflow-y: auto;\n    outline: none;\n    position: absolute;\n    top: ', 'px;\n    transform: scale(0);\n    transform-origin: ', ';\n    transition:\n        visibility 0s linear ', ',\n        opacity ', ' ', ',\n        transform ', ' ', ';\n    visibility: hidden;\n    z-index: ', ';\n\n    max-height: ', 'px;\n\n    ', '\n\n']);

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import styled from 'styled-components';
import { COLOR_WHITE } from '../colors';
import { ANIMATION_CURVE_DEFAULT, ANIMATION_DURATION, Z_INDEX_HIGH, Z_DEPTH_SHADOW_1 } from '../variables';

var OPENABLE_OVERLAY_BACKGROUND = COLOR_WHITE;

export var OpenableOverlayElement = styled.div(_templateObject, OPENABLE_OVERLAY_BACKGROUND, Z_DEPTH_SHADOW_1, function (props) {
    return props.placement.left;
}, function (props) {
    return props.placement.top;
}, function (props) {
    return props.origin;
}, ANIMATION_DURATION, ANIMATION_DURATION, ANIMATION_CURVE_DEFAULT, ANIMATION_DURATION, ANIMATION_CURVE_DEFAULT, Z_INDEX_HIGH, function (props) {
    return props.maxHeight;
}, function (props) {
    return props.opened && '\n        visibility: visible;\n        opacity: 1;\n        transform: scale(1);\n        transition-delay: 0s;\n    ';
});

/*
    transition:
        visibility 0s linear ${ANIMATION_DURATION},
        opacity ${ANIMATION_DURATION} ${ANIMATION_CURVE_DEFAULT},
        transform ${ANIMATION_DURATION} ${ANIMATION_CURVE_DEFAULT};
        */