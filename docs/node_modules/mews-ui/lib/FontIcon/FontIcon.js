var _templateObject = _taggedTemplateLiteral(['\n    color: ', ';\n'], ['\n    color: ', ';\n']),
    _templateObject2 = _taggedTemplateLiteral(['\n    font-family: \'Material Icons\', \'Material_Icons\';\n    font-weight: normal;\n    font-style: normal;\n    font-size: 24px;  /* Preferred icon size */\n    display: inline-block;\n    line-height: 1;\n    text-transform: none;\n    letter-spacing: normal;\n    word-wrap: normal;\n    white-space: nowrap;\n    direction: ltr;\n\n    /* Support for all WebKit browsers. */\n    -webkit-font-smoothing: antialiased;\n    /* Support for Safari and Chrome. */\n    text-rendering: optimizeLegibility;\n\n    /* Support for Firefox. */\n    -moz-osx-font-smoothing: grayscale;\n\n    /* Support for IE. */\n    font-feature-settings: \'liga\';\n'], ['\n    font-family: \'Material Icons\', \'Material_Icons\';\n    font-weight: normal;\n    font-style: normal;\n    font-size: 24px;  /* Preferred icon size */\n    display: inline-block;\n    line-height: 1;\n    text-transform: none;\n    letter-spacing: normal;\n    word-wrap: normal;\n    white-space: nowrap;\n    direction: ltr;\n\n    /* Support for all WebKit browsers. */\n    -webkit-font-smoothing: antialiased;\n    /* Support for Safari and Chrome. */\n    text-rendering: optimizeLegibility;\n\n    /* Support for Firefox. */\n    -moz-osx-font-smoothing: grayscale;\n\n    /* Support for IE. */\n    font-feature-settings: \'liga\';\n']);

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import { PropTypes as pt } from 'prop-types';
import styled from 'styled-components';
import { DEFAULT_THEME } from '../variables';

var FontIconElement = styled.span(_templateObject, function (props) {
    return props.theme.iconColor;
});
FontIconElement.defaultProps = {
    theme: DEFAULT_THEME
};

var FontIcon = function FontIcon(_ref) {
    var alt = _ref.alt,
        value = _ref.value,
        className = _ref.className;
    return React.createElement(
        FontIconElement,
        { 'aria-label': alt, className: className },
        React.createElement(
            'span',
            { 'aria-hidden': 'true' },
            value
        )
    );
};

FontIcon.propTypes = {
    alt: pt.string,
    className: pt.string,
    value: pt.string
};

FontIcon.defaultProps = {
    alt: ''
};

var MaterialFontIcon = styled(FontIcon)(_templateObject2);

export default MaterialFontIcon;