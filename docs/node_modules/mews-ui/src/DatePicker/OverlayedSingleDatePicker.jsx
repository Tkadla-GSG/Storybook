import React, { Component } from 'react';
import { PropTypes as pt } from 'prop-types';
import OpenableOverlay from '../OpenableOverlay/OpenableOverlay';
import Origin from '../OpenableOverlay/Origin';
import SingleDatePicker from './SingleDatePicker';

export default class OverlayedSingleDatePicker extends Component {
    static propTypes = {
        anchorElement: pt.oneOfType([pt.node, pt.func]),
        anchorOrigin: pt.instanceOf(Origin),
        targetOrigin: pt.instanceOf(Origin),
        onKeyDown: pt.func,
        opened: pt.bool,
    };

    static defaultProps = {
        anchorOrigin: Origin.BottomCenter,
        targetOrigin: Origin.TopCenter,
    };

    getCalendar() {
        return this.calendarComponent;
    }

    render() {
        const { anchorElement, anchorOrigin, targetOrigin, opened, onKeyDown, ...other } = this.props;

        const overlayProps = {
            anchorElement,
            anchorOrigin,
            opened,
            onKeyDown,
            targetOrigin,
        };

        const calendarProps = {
            ...other,
            ref: c => (this.calendarComponent = c),
        };

        return (
            <OpenableOverlay {...overlayProps}>
                <SingleDatePicker {...calendarProps} />
            </OpenableOverlay>
        );
    }
}

