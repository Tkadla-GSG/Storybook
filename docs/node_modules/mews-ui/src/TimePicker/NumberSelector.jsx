import _ from 'lodash';
import React, { Component } from 'react';
import { PropTypes as pt } from 'prop-types';
import { noop } from '../utils/func';
import { NumberSelectorElement, LabelElement, SliderElement, InputElement } from './style';

export const numberSelectorFactory = ({ Input }) => class NumberSelector extends Component {
    static propTypes = {
        value: pt.number,
        min: pt.number,
        max: pt.number,
        label: pt.node,
        onChange: pt.func,
    };

    static defaultProps = {
        onChange: noop,
    };

    state = {
        value: this.props.value || 0,
    };

    componentWillReceiveProps(nextProps) {
        if (!_.isUndefined(nextProps.value) && nextProps.value !== this.state.value) {
            this.setState({ value: nextProps.value });
        }
    }

    handleSliderChange = value => {
        this.setState({ value });
        this.props.onChange(value);
    };

    handleInputChange = e => {
        const value = e.target ? e.target.value : e.target;
        this.setState({ value: +value });
    };

    render() {
        const { min, max, label } = this.props;
        const { value } = this.state;

        const sliderProps = {
            min,
            max,
            value,
            onChange: this.handleSliderChange,
        };

        const inputProps = {
            min,
            max,
            value,
            onChange: this.handleInputChange,
        };

        return (
            <NumberSelectorElement>
                <LabelElement>{label}</LabelElement>
                <SliderElement {...sliderProps} />
                <Input {...inputProps} />
            </NumberSelectorElement>
        );
    }
};

const NumberSelector = numberSelectorFactory({ Input: InputElement });
export default NumberSelector;
