import styled, { css } from 'styled-components';

import { COLOR_RED } from '../colors';
import { ANIMATION_CURVE_DEFAULT, ANIMATION_DURATION, DEFAULT_THEME } from '../variables';
import FontIcon from '../FontIcon/FontIcon';

const FIELD_TEXT_REQUIRED_COLOR = COLOR_RED;
const FIELD_TEXT_ERROR_COLOR = COLOR_RED;
const FIELD_ICON_FONT_SIZE = '24px';
const FIELD_ICON_SIZE = `calc(2 * ${FIELD_ICON_FONT_SIZE})`;

export const FIELD_TEXT_NORMAL_SIZE = '16px';
export const FIELD_TEXT_LARGE_SIZE = '25px';

export const FieldElement = styled.div`
    position: relative;
    padding-top: 16px;

    ${props => props.hidden && `
        display: none;
    `}
`;

export const ContentWrapperElement = styled.div`
    display: flex;
`;

export const InputWrapperElement = styled.div`
    align-self: center;
    box-sizing: border-box;
    margin-bottom: 8px;
    max-width: ${props => (props.icon ? `calc(100% - ${FIELD_ICON_SIZE})` : '100%')};
    position: relative;
    padding-bottom: 4px;
    padding-top: 16px;
    width: 100%;

    ${props => props.boxed && `
        padding-left: 16px;
        padding-right: 16px;
    `}

    border-bottom: 1px solid ${props => props.theme.hintTextColor};
    ${props => props.focused && css`
        border-color: ${props.theme.primaryColor};
    `}
    ${props => !props.focused && props.error && css`
        border-color: ${FIELD_TEXT_ERROR_COLOR};
    `}

    ${props => props.boxed && `
        background-color: rgba(0, 0, 0, .06);
        border-radius: 4px;
    `}
`;
InputWrapperElement.defaultProps = { theme: DEFAULT_THEME };

export const IconElement = styled(FontIcon)`
    align-self: center;
    color: ${props => props.theme.iconColor};
    display: block;
    font-size: ${FIELD_ICON_FONT_SIZE} !important;
    height: ${FIELD_ICON_SIZE};
    line-height: ${FIELD_ICON_SIZE} !important;
    text-align: center;
    transition: color ${ANIMATION_DURATION} ${ANIMATION_CURVE_DEFAULT};
    width: ${FIELD_ICON_SIZE};
    min-width: ${FIELD_ICON_SIZE};

    ${props => props.focused && css`
        color: ${props.theme.primaryColor};
    `}
`;
IconElement.defaultProps = { theme: DEFAULT_THEME };

export const LabelElement = styled.label`
    color: ${props => props.theme.hintTextColor};
    font-size: ${props => (props.large ? FIELD_TEXT_LARGE_SIZE : FIELD_TEXT_NORMAL_SIZE)};
    font-weight: normal;
    left: 0;
    right: 0;
    overflow: hidden;
    pointer-events: none;
    position: absolute;
    text-overflow: ellipsis;
    transform-origin: left top;
    transition-duration: ${ANIMATION_DURATION};
    transition-property: transform, color, font-size, height;
    transition-timing-function: ${ANIMATION_CURVE_DEFAULT};
    white-space: nowrap;

    ${props => props.boxed && `
        left: 16px;
        right: 16px;
    `}

    ${props => (!props.floating && (props.focused || props.filled)) && css`
        display: none;
    `}

    ${props => (props.floating && (props.focused || props.filled)) && css`
        font-size: calc(1em * 0.75);
        transform: translateY(-100%);
    `}

    ${props => props.focused && css`
        color: ${props.theme.primaryColor};
    `}

    ${props => !props.focused && props.error && css`
        color: ${FIELD_TEXT_REQUIRED_COLOR};
    `}
`;
LabelElement.defaultProps = { theme: DEFAULT_THEME };

export const LabelRequiredElement = styled.span`
    color: ${FIELD_TEXT_REQUIRED_COLOR};
`;

export const ErrorElement = styled.div`
    color: ${FIELD_TEXT_ERROR_COLOR};
    font-size: 12px;
    padding-bottom: 8px;

    ${props => props.icon && css`
        margin-left: ${props.boxed ? 64 : 48}px;
    `}
`;
