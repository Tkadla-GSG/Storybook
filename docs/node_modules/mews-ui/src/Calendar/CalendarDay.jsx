import _ from 'lodash';
import React, { Component } from 'react';
import { PropTypes as pt } from 'prop-types';
import { noop } from '../utils/func';
import { CalendarDayElement, DayButtonElement } from './style';

export default class CalendarDay extends Component {
    static propTypes = {
        day: pt.any, // eslint-disable-line react/forbid-prop-types
        getCalendarService: pt.func.isRequired,
        modifiers: pt.objectOf(pt.func),
        onDateClick: pt.func,
    };

    static defaultProps = {
        onDateClick: noop,
    };

    handleClick = () => {
        this.props.onDateClick(this.props.day);
    };

    render() {
        let dayButton;
        if (this.props.day) {
            const { day, getCalendarService, modifiers, ...other } = this.props;

            const appliedModifiers = _.mapValues(modifiers, predicate => predicate(day));

            const buttonProps = {
                ...other,
                ...appliedModifiers,
                onClick: this.handleClick,
                tabIndex: undefined,
            };

            dayButton = (
                <DayButtonElement {...buttonProps}>
                    {getCalendarService().getDateNumber(day)}
                </DayButtonElement>
            );
        }

        return (
            <CalendarDayElement>
                {dayButton}
            </CalendarDayElement>
        );
    }
}
