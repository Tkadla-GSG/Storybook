import React, { Component } from 'react';
import { PropTypes as pt } from 'prop-types';
import ProgressMode from './ProgressMode';
import { calculateRatio, ProgressCircularElement, ProgressCircularPath, ProgressCircularSvg } from './style';

export default class ProgressCircular extends Component {
    static propTypes = {
        max: pt.number,
        min: pt.number,
        mode: pt.instanceOf(ProgressMode),
        value: pt.number,
    };

    static defaultProps = {
        max: 100,
        min: 0,
        mode: ProgressMode.Indeterminate,
        value: 0,
    };

    render() {
        const { max, min, mode, value } = this.props;
        const svgProps = {
            mode,
            viewBox: '0 0 60 60',
        };
        const pathProps = {
            cx: 30,
            cy: 30,
            r: 25,
            mode,
        };

        if (mode === ProgressMode.Determinate) {
            pathProps.style = {
                strokeDasharray: `${2 * Math.PI * 25 * calculateRatio({ max, min, value })}, 400`,
            };
        }

        return (
            <ProgressCircularElement aria-valuenow={value} aria-valuemin={min} aria-valuemax={max}>
                <ProgressCircularSvg {...svgProps}>
                    <ProgressCircularPath {...pathProps} />
                </ProgressCircularSvg>
            </ProgressCircularElement>
        );
    }
}
