import React, { Component } from 'react';
import { PropTypes as pt } from 'prop-types';
import ProgressMode from './ProgressMode';
import { calculateRatio, ProgressLinearElement, LinearValueBar } from './style';

export default class ProgressLinear extends Component {
    static propTypes = {
        disabled: pt.bool,
        max: pt.number,
        min: pt.number,
        mode: pt.instanceOf(ProgressMode),
        value: pt.number,
    };

    static defaultProps = {
        buffer: 0,
        max: 100,
        min: 0,
        mode: ProgressMode.Indeterminate,
        multicolor: false,
        value: 0,
    };

    render() {
        const { disabled, max, min, mode, value, ...other } = this.props;

        const barProps = { disabled, mode };
        if (mode === ProgressMode.Determinate) {
            barProps.style = {
                transform: `scaleX(${calculateRatio({ max, min, value })})`,
            };
        }

        return (
            <ProgressLinearElement aria-valuenow={value} aria-valuemin={min} aria-valuemax={max} {...other}>
                <LinearValueBar {...barProps} />
            </ProgressLinearElement>
        );
    }
}
