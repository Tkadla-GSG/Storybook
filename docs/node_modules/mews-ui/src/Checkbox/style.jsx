import styled, { css } from 'styled-components';
import { ANIMATION_CURVE_DEFAULT, ANIMATION_CURVE_FAST_OUT_LINEAR_IN, ANIMATION_CURVE_LINEAR_OUT_SLOW_IN, DEFAULT_THEME } from '../variables';
import { COLOR_BLACK } from '../colors';
import { alpha } from '../utils/color';

// Can't be bigger unless there is way how to override it
const CHECKBOX_TOUCH_AREA = 18;

const CHECKBOX_SIZE = 18;
const CHECKBOX_MARK_STROKE_SIZE = 2 / 15 * CHECKBOX_SIZE;
const TRANSITION_DURATION = '90ms';
const PATH_LENGTH = '29.7833385';

const BORDER_COLOR = 'rgba(0, 0, 0, .54)';
const BORDER_DISABLED_COLOR = 'rgba(0, 0, 0, .26)';

const CHECKBOX_FOCUS_COLOR = alpha(COLOR_BLACK, 0.1);
const CHECKBOX_FOCUS_SIZE = '42px';

export const CheckboxElement = styled.div`
    display: inline-flex;
    align-items: center;
`;

export const InputWrapperElement = styled.div`
    height: ${CHECKBOX_SIZE}px;
    padding: ${(CHECKBOX_TOUCH_AREA - CHECKBOX_SIZE) / 2}px;
    position: relative;
    width: ${CHECKBOX_SIZE}px;

    &::before {
        background-color: ${CHECKBOX_FOCUS_COLOR};
        border-radius: 50%;
        content: '';
        height: ${CHECKBOX_FOCUS_SIZE};
        left: 50%;
        margin-left: calc(-1 * ${CHECKBOX_FOCUS_SIZE} / 2);
        margin-top: calc(-1 * ${CHECKBOX_FOCUS_SIZE} / 2);
        opacity: 0;
        pointer-events: none;
        position: absolute;
        top: 50%;
        transition: opacity 200ms ${ANIMATION_CURVE_DEFAULT};
        width: ${CHECKBOX_FOCUS_SIZE};

        ${props => props.focused && css`
            opacity: 1;
        `}
    }
`;

export const InputElement = styled.input`
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    margin: 0;
    opacity: 0;
    padding: 0;
    box-sizing: border-box;

`;

export const CheckMarkBackgroundElement = styled.div`
    display: inline-flex;
    align-items: center;
    justify-content: center;

    width: ${CHECKBOX_SIZE}px;
    height: ${CHECKBOX_SIZE}px;

    border: 2px solid ${BORDER_COLOR};
    border-radius: 2px;
    box-sizing: border-box;
    background-color: transparent;
    pointer-events: none;

    transition:
        border-color ${TRANSITION_DURATION} ${ANIMATION_CURVE_FAST_OUT_LINEAR_IN},
        background-color ${TRANSITION_DURATION} ${ANIMATION_CURVE_FAST_OUT_LINEAR_IN};

    ${props => props.checked && css`
        border-color: ${props.theme.primaryColor};
        background-color: ${props.theme.primaryColor};
    `}

    ${props => props.disabled && css`
        border-color: ${props.checked ? 'transparent' : BORDER_DISABLED_COLOR};
        background-color: ${props.checked ? BORDER_DISABLED_COLOR : 'transparent'};
    `}
`;
CheckMarkBackgroundElement.defaultProps = { theme: DEFAULT_THEME };

export const CheckMarkSvgElement = styled.svg`
    opacity: 0;
    transition: opacity ${TRANSITION_DURATION} ${ANIMATION_CURVE_LINEAR_OUT_SLOW_IN};
    width: 100%;

    ${props => props.checked && `
        opacity: 1;
    `}
`;

export const CheckMarkPathElement = styled.path`
    stroke: white;
    stroke-dasharray: ${PATH_LENGTH};
    stroke-dashoffset: ${PATH_LENGTH};
    stroke-width: ${CHECKBOX_MARK_STROKE_SIZE * 1.3}px;
    transition: stroke-dashoffset ${TRANSITION_DURATION} ${ANIMATION_CURVE_LINEAR_OUT_SLOW_IN} ${TRANSITION_DURATION};

    ${props => props.checked && `
        stroke-dashoffset: 0;
    `}
`;

export const LabelElement = styled.label`
    padding-left: 16px;
`;
