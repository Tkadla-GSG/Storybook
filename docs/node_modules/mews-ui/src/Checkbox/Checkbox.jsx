import React, { Component } from 'react';
import { PropTypes as pt } from 'prop-types';

import { noop } from '../utils/func';
import { CheckboxElement, InputWrapperElement, InputElement, LabelElement, CheckMarkBackgroundElement, CheckMarkSvgElement, CheckMarkPathElement } from './style';

export default class Checkbox extends Component {
    static propTypes = {
        checked: pt.bool,
        children: pt.node,
        disabled: pt.bool,
        id: pt.string,
        name: pt.string,
        onBlur: pt.func,
        onChange: pt.func,
        onFocus: pt.func,
        onClick: pt.func,
    };

    static defaultProps = {
        onBlur: noop,
        onChange: noop,
        onFocus: noop,
        onClick: noop,
    };

    state = {
        checked: this.props.checked || false,
    };

    componentWillReceiveProps(nextProps) {
        if (nextProps.checked !== undefined && nextProps.checked !== this.state.checked) {
            this.setState({ checked: nextProps.checked });
        }
    }

    handleMouseUp = () => {
        this.setState({ focusedByMouse: true });
        this.props.onClick();
    };

    handleChange = e => {
        e.stopPropagation();

        const checked = !this.state.checked;
        this.setState({ checked }, () => this.props.onChange(checked));
    };

    handleFocus = e => {
        this.setState({ focused: true });
        this.props.onFocus(e);
    };

    handleBlur = e => {
        this.setState({ focused: false, focusedByMouse: false });
        this.props.onBlur(e);
    };

    render() {
        const { children, disabled, id, name, ...others } = this.props;
        const { checked, focused, focusedByMouse } = this.state;

        const inputProps = {
            ...others,
            checked,
            disabled,
            id,
            name,
            onBlur: this.handleBlur,
            onFocus: this.handleFocus,
            type: 'checkbox',
            onChange: noop,
        };

        const checkMarkBackgroundProps = {
            checked,
            disabled,
        };

        const checkMarkSvgProps = {
            checked,
            viewBox: '0 0 24 24',
        };

        const checkMarkPathProps = {
            checked,
            fill: 'none',
            d: 'M1.73,12.91 8.1,19.28 22.79,4.59',
        };

        const labelProps = {
            htmlFor: id,
        };

        const inputWrapperProps = {
            focused: focused && !focusedByMouse,
            onMouseUp: this.handleMouseUp,
            onChange: this.handleChange,
        };

        return (
            <CheckboxElement>
                <InputWrapperElement {...inputWrapperProps}>
                    <InputElement {...inputProps} />
                    <CheckMarkBackgroundElement {...checkMarkBackgroundProps}>
                        <CheckMarkSvgElement {...checkMarkSvgProps}>
                            <CheckMarkPathElement {...checkMarkPathProps} />
                        </CheckMarkSvgElement>
                    </CheckMarkBackgroundElement>
                </InputWrapperElement>
                <LabelElement {...labelProps}>
                    {children}
                </LabelElement>
            </CheckboxElement>
        );
    }
}
