'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

require('core-js/fn/function/name');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _deepFreezeStrict = require('deep-freeze-strict');

var _deepFreezeStrict2 = _interopRequireDefault(_deepFreezeStrict);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    create: function create(type) {
        for (var _len = arguments.length, mixins = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            mixins[_key - 1] = arguments[_key];
        }

        return (0, _deepFreezeStrict2.default)(_lodash2.default.assign.apply(_lodash2.default, [Object.create(type.prototype)].concat(mixins)));
    },
    is: function is(object, type) {
        return _lodash2.default.isObject(object) && object instanceof type;
    },
    check: function check(object, type) {
        if (!this.is(object, type)) {
            throw new TypeError("Expected instance of '" + type.name + "'.");
        }
    },
    checkType: function checkType(type) {
        if (!_lodash2.default.isFunction(type)) {
            throw new Error('Expected the type to be a function.');
        }

        if (_lodash2.default.isEmpty(type.name)) {
            throw new Error("Expected the type's name to be a non-empty string.");
        }
    }
};