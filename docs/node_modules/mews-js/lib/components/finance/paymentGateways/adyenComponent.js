'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = AdyenComponent;

var _adyenCseJs = require('adyen-cse-js');

var _adyenCseJs2 = _interopRequireDefault(_adyenCseJs);

var _utils = require('../../../utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULT_HOLDER_NAME = 'Cardholder';

function AdyenComponent() {
    return _utils.type.create(AdyenComponent, {
        tokenizeCard: function tokenizeCard(_ref, _ref2) {
            var number = _ref.number,
                cvc = _ref.cvv,
                _ref$expiration = _ref.expiration,
                expiryMonth = _ref$expiration.month,
                expiryYear = _ref$expiration.year;
            var publicKey = _ref2.publicKey,
                generationtime = _ref2.nowUtc;

            var nonce = _adyenCseJs2.default.createEncryption(publicKey, { enableValidations: false }).encrypt({
                cvc: cvc,
                number: number,
                expiryMonth: expiryMonth,
                expiryYear: expiryYear,
                generationtime: generationtime,
                holderName: DEFAULT_HOLDER_NAME
            });

            if (!nonce) {
                return Promise.reject(new Error('Adyen gateway client refused to encrypt the card.'));
            }

            return Promise.resolve(nonce);
        }
    });
}