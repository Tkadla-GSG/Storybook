'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = ConfigurationComponent;

var _utils = require('../utils');

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var PLATFORM_MODE = {
    DEVELOPMENT: 'development',
    DEMO: 'demo',
    PRODUCTION: 'production',
    TEST: 'test'
};

var DEFAULT_CONFIGURATION = {
    platformMode: '',
    versionHash: '',
    sentryDsn: '',
    platformPrimaryUrl: '',
    platformUrls: [],
    staticContentBaseUrl: '',
    staticContentPath: '',
    currentServerUrl: '',
    facebookAppId: '',
    google: {
        mapsApiKey: ''
    },
    productName: ''
};

function ConfigurationComponent() {
    var configuration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_CONFIGURATION;

    return _utils.type.create(ConfigurationComponent, {
        PLATFORM_MODE: PLATFORM_MODE,

        getConfiguration: function getConfiguration() {
            return _extends({}, configuration);
        },
        getPlatform: function getPlatform() {
            return {
                primaryUrl: configuration.platformPrimaryUrl,
                urls: [].concat(_toConsumableArray(configuration.platformUrls))
            };
        },
        getCurrentServerUrl: function getCurrentServerUrl() {
            return configuration.currentServerUrl;
        },
        getSentryDsn: function getSentryDsn() {
            return configuration.sentryDsn;
        },
        getProductName: function getProductName() {
            return configuration.productName;
        },
        getPlatformMode: function getPlatformMode() {
            return configuration.platformMode;
        },
        getVersionHash: function getVersionHash() {
            return configuration.versionHash;
        },
        getFacebookAppId: function getFacebookAppId() {
            return configuration.facebookAppId;
        },
        getStaticContentBaseUrl: function getStaticContentBaseUrl() {
            return configuration.staticContentBaseUrl;
        },
        getStaticContentPath: function getStaticContentPath() {
            return configuration.staticContentPath;
        },
        isDevelopment: function isDevelopment() {
            return configuration.platformMode === PLATFORM_MODE.DEVELOPMENT;
        },
        isDemo: function isDemo() {
            return configuration.platformMode === PLATFORM_MODE.DEMO;
        },
        isProduction: function isProduction() {
            return configuration.platformMode === PLATFORM_MODE.PRODUCTION;
        },
        isTest: function isTest() {
            return configuration.platformMode === PLATFORM_MODE.TEST;
        }
    });
}