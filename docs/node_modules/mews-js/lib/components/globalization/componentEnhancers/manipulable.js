'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = manipulable;

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _utils = require('../../../utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function manipulable(factory, toMoment) {
    var parts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

    var add = function add(partName) {
        return function (date, number) {
            _utils.check.number(number);

            var m = toMoment(date).add(number, partName);
            return factory(m);
        };
    };

    var diff = function diff(partName) {
        return function (date1, date2) {
            _utils.check.sameTimezones(date1, date2);
            return toMoment(date1).diff(toMoment(date2), partName);
        };
    };

    return _lodash2.default.reduce(parts, function (operations, p) {
        var _$assign;

        return _lodash2.default.assign(operations, (_$assign = {}, _defineProperty(_$assign, 'add' + p.value, add(_lodash2.default.lowerCase(p.value))), _defineProperty(_$assign, 'diff' + p.value, diff(_lodash2.default.lowerCase(p.value))), _$assign));
    }, {});
}