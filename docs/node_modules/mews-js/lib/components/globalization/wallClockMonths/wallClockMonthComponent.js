'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = WallClockMonthComponent;
exports.toWallClockMonthMoment = toWallClockMonthMoment;

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _momentTimezone = require('moment-timezone');

var _momentTimezone2 = _interopRequireDefault(_momentTimezone);

var _utils = require('../../../utils');

var _utils2 = require('../utils');

var _enums = require('../enums');

var _componentEnhancers = require('../componentEnhancers');

var _cultureInfoComponent = require('../cultureInfos/cultureInfoComponent');

var _cultureInfoComponent2 = _interopRequireDefault(_cultureInfoComponent);

var _wallClockDate = require('../wallClockDates/wallClockDate');

var _wallClockDate2 = _interopRequireDefault(_wallClockDate);

var _wallClockMonth = require('./wallClockMonth');

var _wallClockMonth2 = _interopRequireDefault(_wallClockMonth);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PARTS = [_enums.DateTimePart.Year, _enums.DateTimePart.Month];

function WallClockMonthComponent(cultureInfoComponent) {
    _utils.type.check(cultureInfoComponent, _cultureInfoComponent2.default);

    return _utils.type.create(WallClockMonthComponent, (0, _componentEnhancers.comparable)(toWallClockMonthMoment), (0, _componentEnhancers.manipulable)(_wallClockMonth2.default, toWallClockMonthMoment, PARTS), {
        parse: function parse(monthString) {
            _utils.check.string(monthString);

            var m = (0, _utils2.parseString)(monthString, 'Etc/Utc', _enums.IsoFormat.Month.value);
            return (0, _wallClockMonth2.default)(m);
        },
        current: function current() {
            var m = _momentTimezone2.default.utc();
            return (0, _wallClockMonth2.default)(m);
        },
        next: function next(wallClockMonth) {
            var m = toWallClockMonthMoment(wallClockMonth);
            m.add(1, 'months');
            return (0, _wallClockMonth2.default)(m);
        },
        prev: function prev(wallClockMonth) {
            var m = toWallClockMonthMoment(wallClockMonth);
            m.subtract(1, 'months');
            return (0, _wallClockMonth2.default)(m);
        },
        getDates: function getDates(wallClockMonth) {
            var m = toWallClockMonthMoment(wallClockMonth);
            var dayCount = m.daysInMonth();
            var dates = _lodash2.default.times(dayCount, function (dayNumber) {
                return (0, _wallClockDate2.default)(m.date(dayNumber + 1));
            });

            return dates;
        },
        getYear: function getYear(wallClockMonth) {
            return toWallClockMonthMoment(wallClockMonth).year();
        },
        toMonthString: function toMonthString(wallClockMonth, localization) {
            return (0, _utils2.format)(toWallClockMonthMoment(wallClockMonth), localization, _enums.MomentLocalizationFormat.Month.value, cultureInfoComponent);
        }
    });
}

function toWallClockMonthMoment(date) {
    _utils.type.check(date, _wallClockMonth2.default);
    return (0, _utils2.toMoment)(date.value, _enums.IsoFormat.Month.value);
}