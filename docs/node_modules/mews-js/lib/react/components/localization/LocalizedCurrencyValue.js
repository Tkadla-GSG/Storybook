'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = require('./propTypes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LocalizedCurrencyValue = function (_Component) {
    _inherits(LocalizedCurrencyValue, _Component);

    function LocalizedCurrencyValue() {
        _classCallCheck(this, LocalizedCurrencyValue);

        return _possibleConstructorReturn(this, (LocalizedCurrencyValue.__proto__ || Object.getPrototypeOf(LocalizedCurrencyValue)).apply(this, arguments));
    }

    _createClass(LocalizedCurrencyValue, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            this.unsubscribe = this.context.localization.subscribe(function () {
                return _this2.forceUpdate();
            });
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.unsubscribe();
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                value = _props.value,
                valueCheck = _props.valueCheck,
                other = _objectWithoutProperties(_props, ['value', 'valueCheck']);

            var finalValue = value;
            if (valueCheck) {
                finalValue = valueCheck(finalValue);
            }
            if (_lodash2.default.isNil(finalValue) || !valueCheck) {
                finalValue = this.context.localization.localizeCurrencyValue(value);
            }

            return _react2.default.createElement(
                'span',
                other,
                finalValue
            );
        }
    }]);

    return LocalizedCurrencyValue;
}(_react.Component);

LocalizedCurrencyValue.propTypes = {
    valueCheck: _propTypes.PropTypes.func
};
LocalizedCurrencyValue.contextTypes = {
    localization: _propTypes2.localizationPropTypes
};
exports.default = LocalizedCurrencyValue;