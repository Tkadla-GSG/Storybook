import { type } from '../utils';

var PLATFORM_MODE = {
    DEVELOPMENT: 'development',
    DEMO: 'demo',
    PRODUCTION: 'production',
    TEST: 'test',
};

var DEFAULT_CONFIGURATION = {
    platformMode: '',
    versionHash: '',
    sentryDsn: '',
    platformPrimaryUrl: '',
    platformUrls: [],
    staticContentBaseUrl: '',
    staticContentPath: '',
    currentServerUrl: '',
    facebookAppId: '',
    google: {
        mapsApiKey: '',
    },
    productName: '',
};

export default function ConfigurationComponent(configuration = DEFAULT_CONFIGURATION) {
    return type.create(ConfigurationComponent, {
        PLATFORM_MODE,

        getConfiguration() {
            return { ...configuration };
        },

        getPlatform() {
            return {
                primaryUrl: configuration.platformPrimaryUrl,
                urls: [...configuration.platformUrls],
            };
        },

        getCurrentServerUrl() {
            return configuration.currentServerUrl;
        },

        getSentryDsn() {
            return configuration.sentryDsn;
        },

        getProductName() {
            return configuration.productName;
        },

        getPlatformMode() {
            return configuration.platformMode;
        },

        getVersionHash() {
            return configuration.versionHash;
        },

        getFacebookAppId() {
            return configuration.facebookAppId;
        },

        getStaticContentBaseUrl() {
            return configuration.staticContentBaseUrl;
        },

        getStaticContentPath() {
            return configuration.staticContentPath;
        },

        isDevelopment() {
            return configuration.platformMode === PLATFORM_MODE.DEVELOPMENT;
        },

        isDemo() {
            return configuration.platformMode === PLATFORM_MODE.DEMO;
        },

        isProduction() {
            return configuration.platformMode === PLATFORM_MODE.PRODUCTION;
        },

        isTest() {
            return configuration.platformMode === PLATFORM_MODE.TEST;
        },
    });
}
