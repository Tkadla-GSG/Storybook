import _ from 'lodash';
import deepFreeze from 'deep-freeze-strict';
import { type, check } from '../../../utils';

export default function DataComponent(initialData) {
    check.data(initialData);
    var dataSource = deepFreeze(_.cloneDeep(initialData));

    return type.create(DataComponent, {
        getLanguages() {
            return dataSource.languages;
        },

        getCountries() {
            return dataSource.countries;
        },

        getCultures() {
            return dataSource.cultures;
        },

        getCurrencies() {
            return dataSource.currencies;
        },

        getTexts() {
            return dataSource.texts;
        },

        getCultureInfos() {
            return dataSource.cultureInfos;
        },

        addData(data) {
            check.data(data);
            var newDataSource = _.clone(dataSource);

            _.forEach(data, (values, key) => {
                if (_.isArray(newDataSource[key])) {
                    newDataSource[key] = [
                        ...newDataSource[key],
                        ...values,
                    ];
                } else {
                    newDataSource[key] = {
                        ...newDataSource[key],
                        ...values,
                    };
                }
            });

            dataSource = deepFreeze(newDataSource);
        },
    });
}
