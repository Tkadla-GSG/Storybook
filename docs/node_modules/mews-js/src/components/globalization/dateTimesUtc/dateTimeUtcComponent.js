import moment from 'moment-timezone';
import { type, check } from '../../../utils';
import toMoment from '../utils/toMoment';
import IsoFormat from '../enums/isoFormat';
import DateTimeUtc from './dateTimeUtc';

const DATE_TIME_UTC_FORMATS = [
    IsoFormat.Year.value,
    IsoFormat.UtcSeconds.value,
    IsoFormat.UtcMilliseconds.value,
];

export default function DateTimeUtcComponent() {
    return type.create(DateTimeUtcComponent, {
        parse(dateTimeUtcString) {
            check.string(dateTimeUtcString);

            const m = toUtcMoment(dateTimeUtcString);
            return DateTimeUtc(m);
        },

        fromEpoch(timestamp) {
            var m = moment(timestamp).utc();
            return DateTimeUtc(m);
        },

        now() {
            var m = moment.utc();
            return DateTimeUtc(m);
        },
    });
}

function toUtcMoment(value) {
    return toMoment(value, DATE_TIME_UTC_FORMATS);
}

export function toDateTimeUtcMoment(dateTimeUtc) {
    type.check(dateTimeUtc, DateTimeUtc);
    return toMoment(dateTimeUtc.value, DATE_TIME_UTC_FORMATS);
}
