import _ from 'lodash';
import { type } from '../../../utils';
import { LanguageComponent } from '../languages';
import { CultureComponent } from '../cultures';
import Localization from './localization';

export default function LocalizationComponent(languageComponent, cultureComponent) {
    type.check(languageComponent, LanguageComponent);
    type.check(cultureComponent, CultureComponent);

    return type.create(LocalizationComponent, {
        create,
        getDefault() {
            return create(languageComponent.getDefault().getCode());
        },
    });

    function create(languageCode, cultureCode) {
        if (_.isEmpty(languageCode)) {
            throw new Error('Expected the languageCode to be non-empty.');
        }

        var language = languageComponent.getByCode(languageCode);
        if (_.isNull(language)) {
            throw new Error('There is no language for the languageCode: ' + languageCode);
        }

        var finalCultureCode = cultureCode || languageCode;
        var culture = cultureComponent.getByCode(finalCultureCode);
        if (_.isNull(culture)) {
            throw new Error('There is no culture for the cultureCode: ' + finalCultureCode);
        }

        return Localization(language, culture);
    }
}
