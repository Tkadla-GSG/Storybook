import React, { Component } from 'react';
import { PropTypes as pt } from 'prop-types';
import { localizationPropTypes } from './propTypes';

class LocalizedText extends Component {
    static defaultProps = {
        substitutes: {},
    }

    static propTypes = {
        textKey: pt.string.isRequired,
        lowerCase: pt.bool,
    }

    static contextTypes = {
        localization: localizationPropTypes,
    }

    componentDidMount() {
        this.unsubscribe = this.context.localization.subscribe(() => this.forceUpdate());
    }

    componentWillUnmount() {
        this.unsubscribe();
    }

    render() {
        const { textKey, substitutes, lowerCase, ...other } = this.props;

        let text = this.context.localization.localizeText(textKey, substitutes);
        if (lowerCase) {
            text = text.toLowerCase();
        }

        return (
            <span {...other}>{text}</span>
        );
    }
}

export default LocalizedText;
