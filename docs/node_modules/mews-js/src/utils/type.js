import 'core-js/fn/function/name';
import _ from 'lodash';
import deepFreeze from 'deep-freeze-strict';

export default {
    create(type, ...mixins) {
        return deepFreeze(_.assign(Object.create(type.prototype), ...mixins));
    },

    is(object, type) {
        return _.isObject(object) && object instanceof type;
    },

    check(object, type) {
        if (!this.is(object, type)) {
            throw new TypeError("Expected instance of '" + type.name + "'.");
        }
    },

    checkType(type) {
        if (!_.isFunction(type)) {
            throw new Error('Expected the type to be a function.');
        }

        if (_.isEmpty(type.name)) {
            throw new Error("Expected the type's name to be a non-empty string.");
        }
    },
};
