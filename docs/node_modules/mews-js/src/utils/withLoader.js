import semaphore from './semaphore';
import noop from 'lodash/noop';

var HIDE_LOADER_TIMEOUT = 100;

export default function withLoaderFactory(showLoader = noop, hideLoader = noop) {
    var taskCounter = semaphore();
    taskCounter.onTake(showLoader);
    taskCounter.onLeave(hideLoader);

    return function withLoader(promise) {
        return Promise.resolve()
            .then(() => {
                taskCounter.take();
                return promise();
            })
            .then(data => {
                delayedLeave();
                return data;
            })
            .catch(err => {
                delayedLeave();
                throw err;
            });
    };

    function delayedLeave() {
        setTimeout(taskCounter.leave, HIDE_LOADER_TIMEOUT);
    }
}
