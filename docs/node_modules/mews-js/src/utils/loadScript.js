import _ from 'lodash';

export default function loadScript(url, { async = true } = {}) {
    if (_.isArray(url)) {
        var promises = _.map(url, u => loadScript(u));
        return Promise.all(promises);
    }

    return new Promise((resolve, reject) => {
        var ready = false;
        var tag = document.getElementsByTagName('script')[0];
        var script = document.createElement('script');

        script.type = 'text/javascript';
        script.src = url;
        script.async = async;
        script.onload = script.onreadystatechange = () => {
            if (!ready && (!script.readyState || script.readyState === 'complete')) {
                ready = true;
                resolve(script);
            }
        };
        script.onerror = script.onabort = reject;
        tag.parentNode.insertBefore(script, tag);
    });
}
